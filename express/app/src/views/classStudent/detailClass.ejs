  <style>
    body {
      background-color: #f2f4f8;
    }
    .sidebar {
      height: 100vh;
      background-color: #f8f9fa;
    }
    .tab-button {
      width: 100%;
      text-align: left;
    }
    .tab-button.active {
      background-color: #6200ea;
      color: white;
    }
    .tab-content {
      padding: 2rem;
    }
  </style>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-2 sidebar p-3">
      <button class="btn tab-button active mb-2" id="btn-baitap">üìÖ ƒê·ªÅ Thi</button>
      <button class="btn tab-button" id="btn-video">üé• Video Watch</button>
      <button class="btn tab-button" id="btn-bangtin">üì∞ B·∫£ng Tin</button>
    </div>

    <!-- Content -->
    <div class="col-10">
      <!-- B√†i t·∫≠p, ƒë·ªÅ thi -->
      <div id="content-baitap" class="tab-content">
      </div>

      <!-- B·∫£ng tin -->
      <div id="content-bangtin" class="tab-content d-none">
      </div>

      <!-- video watch -->
      <div id="content-video" class="tab-content d-none">
      <h4>Video s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã t·∫°i ƒë√¢y.</h4>
      </div>  

    </div>
  </div>
</div>

<script>
  const btnBaitap = document.getElementById("btn-baitap");
  const btnBangtin = document.getElementById("btn-bangtin");
  const contentBaitap = document.getElementById("content-baitap");
  const contentBangtin = document.getElementById("content-bangtin");
  const btnVideo = document.getElementById("btn-video");
  const contentVideo = document.getElementById("content-video");

  btnBaitap.addEventListener("click", () => {
    btnBaitap.classList.add("active");
    btnBangtin.classList.remove("active");
    btnVideo.classList.remove("active");

    contentBaitap.classList.remove("d-none");
    contentBangtin.classList.add("d-none");
    contentVideo.classList.add("d-none");

  });

  btnBangtin.addEventListener("click", () => {
    btnBangtin.classList.add("active");
    btnBaitap.classList.remove("active");
    btnVideo.classList.remove("active");

    contentBangtin.classList.remove("d-none");
    contentBaitap.classList.add("d-none");
    contentVideo.classList.add("d-none");

  });

  btnVideo.addEventListener("click", () => {
    btnVideo.classList.add("active");
    btnBaitap.classList.remove("active");
    btnBangtin.classList.remove("active");

    contentVideo.classList.remove("d-none");
    contentBaitap.classList.add("d-none");
    contentBangtin.classList.add("d-none");
  });
</script>

<script>
    const pathParts = window.location.pathname.split('/');
    const CLASS_ID = pathParts[pathParts.length - 1];

    async function renderAnnounce(){
        try {
            const res = await fetch(`/class-student/api/${CLASS_ID}`)
            const classInfo = await res.json()

            // change content Bang tin
            let listAnnouncements = classInfo.announcement
            listAnnouncements = (classInfo.announcement || []).sort((a, b) => {
                return new Date(b.date) - new Date(a.date);
            });
            contentBangtin.innerHTML = listAnnouncements
            .map(a => `
                <div class="card p-3 mb-3">
                <span class="text-muted">
                    ${new Date(a.date).toLocaleDateString('vi-VN')}
                </span>
                <p class="mb-0">${a.content}</p>
                </div>
            `)
            .join('');
            
        } catch(error) {
            console.error('error fetch class info')
        }
    }


    async function renderTestInfo(){
        try {
            const res = await fetch(`/class-student/api/get-class-test?class_id=${CLASS_ID}`)
            const testInfoStatus = await res.json()
            const { student_id, tests} = testInfoStatus

            contentBaitap.innerHTML = tests
            .map(test => `
                <div class="card mt-3 p-3">
                    <strong><a href="/test-student/test-information/${test.test_id}?class_id=${CLASS_ID}">${test.test_title}</a></strong>
                    <p>Tr·∫°ng Th√°i: ${test.test_status_submit?'ƒê√£ n·ªôp ‚úÖ' : 'Ch∆∞a N·ªôp ‚ùå'}</p>
                    <p>${test.test_status_submit ? 'ƒêi·ªÉm S·ªë : ' + test.score + ' / ' + test.sum_score : ''}</p>
                </div>
            `)
            .join('');
            
        } catch(error) {
            console.error('error fetch class info')
        }
    }

    async function renderVideoInfo(){
        try {
            const res = await fetch(`/class-student/student-video?class_id=${CLASS_ID}`)
            const videoStudentInfoStatus = await res.json()
            const { videoClassInfo, studentVideoInfo, student_id } = videoStudentInfoStatus

            // this part merge information
            let videoStatus = [] ;
            for (let i = 0; i < videoClassInfo.length; i++) {
              const videoRequirement = videoClassInfo[i];
              let haveFound = false;
              for (let j = 0; j < studentVideoInfo.video.length; j++) {
                const video = studentVideoInfo.video[j];
                if ( videoRequirement._id === video.video_requirement_id ) {
                  videoStatus.push({
                    video_requirement_id: videoRequirement._id,
                    video_requirement_name:videoRequirement.video_requirement_name,
                    video_embed: videoRequirement.videoRequirement,
                    video_duration: videoRequirement.video_duration,
                    note: videoRequirement.note,
                    completedStatus: true
                  })
                  haveFound = true
                }
              }

              if ( !haveFound ) {
                videoStatus.push({
                  video_requirement_id: videoRequirement._id,
                  video_requirement_name:videoRequirement.video_requirement_name,
                  video_embed: videoRequirement.videoRequirement,
                  video_duration: videoRequirement.video_duration,
                  note: videoRequirement.note,
                  completedStatus: false
                })
              }
            }

            contentVideo.innerHTML = videoStatus
            .map(video_Status => `
                <div class="card mt-3 p-3">
                    <strong><a href="/video-student/watch-video/${video_Status.video_requirement_id}?student_id=${student_id}">${video_Status.video_requirement_name}</a></strong>
                    <p>Th·ªùi gian xem: ${video_Status.video_duration}</p>
                    <p>Ghi ch√∫: ${video_Status.note} ph√∫t</p>
                    <p>Tr·∫°ng Th√°i: ${ video_Status.completedStatus ? ' ƒê√£ ho√†n th√†nh ‚úÖ' : ' Ch∆∞a ho√†n th√†nh ‚ùå' }</p>
                </div>
            `)
            .join('');
            
        } catch(error) {
            console.error('error fetch class info')
        }
    }

    document.addEventListener('DOMContentLoaded', ()=>{
        renderAnnounce()
        renderTestInfo()
        renderVideoInfo()
    })
</script>

<a href="https://m.me/61575332265438" target="_blank" >
  <i style="
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: #0084ff;
  color: white;
  padding: 15px;
  border-radius: 50%;
  font-size: 20px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.2);
  z-index: 9999;
  text-decoration: none;" class="fa-brands fa-facebook-messenger"></i>
</a>
