  <style>
    body {
      background-color: #f2f4f8;
    }
    .sidebar {
      height: 100vh;
      background-color: #f8f9fa;
    }
    .tab-button {
      width: 100%;
      text-align: left;
    }
    .tab-button.active {
      background-color: #6200ea;
      color: white;
    }
    .tab-content {
      padding: 2rem;
    }
  </style>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-2 sidebar p-3">
      <button class="btn tab-button active mb-2" id="btn-baitap">📅 Đề Thi</button>
      <button class="btn tab-button" id="btn-essay">📋 Đề Thi Tự Luận</button>
      <button class="btn tab-button" id="btn-video">🎥 Video Watch</button>
      <button class="btn tab-button" id="btn-bangtin">📰 Bảng Tin</button>
    </div>

    <!-- Content -->
    <div class="col-10">
      <!-- Bài tập, đề thi -->
      <div id="content-baitap" class="tab-content">
      </div>

      <!-- essay test -->
      <div id="content-essay" class="tab-content d-none">
      <h4>Bài Tự Luận sẽ được hiển thị tại đây.</h4>
      </div>  

      <!-- Bảng tin -->
      <div id="content-bangtin" class="tab-content d-none">
      </div>

      <!-- video watch -->
      <div id="content-video" class="tab-content d-none">
      <h4>Video sẽ được hiển thị tại đây.</h4>
      </div>  

    </div>
  </div>
</div>

<script>
  const btnBaitap = document.getElementById("btn-baitap");
  const btnBangtin = document.getElementById("btn-bangtin");
  const btnVideo = document.getElementById("btn-video");
  const btnEssay = document.getElementById("btn-essay");
  const contentBaitap = document.getElementById("content-baitap");
  const contentBangtin = document.getElementById("content-bangtin");
  const contentVideo = document.getElementById("content-video");
  const contentEssay = document.getElementById("content-essay");

  btnBaitap.addEventListener("click", () => {
    btnBaitap.classList.add("active");
    btnBangtin.classList.remove("active");
    btnVideo.classList.remove("active");
    btnEssay.classList.remove("active");

    contentBaitap.classList.remove("d-none");
    contentBangtin.classList.add("d-none");
    contentVideo.classList.add("d-none");
    contentEssay.classList.add("d-none");

  });

  btnBangtin.addEventListener("click", () => {
    btnBangtin.classList.add("active");
    btnBaitap.classList.remove("active");
    btnVideo.classList.remove("active");
    btnEssay.classList.remove("active");

    contentBangtin.classList.remove("d-none");
    contentBaitap.classList.add("d-none");
    contentVideo.classList.add("d-none");
    contentEssay.classList.add("d-none");

  });

  btnVideo.addEventListener("click", () => {
    btnVideo.classList.add("active");
    btnBaitap.classList.remove("active");
    btnBangtin.classList.remove("active");
    btnEssay.classList.remove("active");

    contentVideo.classList.remove("d-none");
    contentBaitap.classList.add("d-none");
    contentBangtin.classList.add("d-none");
    contentEssay.classList.add("d-none");
  });

  btnEssay.addEventListener("click", () => {
    btnEssay.classList.add("active");
    btnVideo.classList.remove("active");
    btnBaitap.classList.remove("active");
    btnBangtin.classList.remove("active");

    contentEssay.classList.remove("d-none");
    contentVideo.classList.add("d-none");
    contentBaitap.classList.add("d-none");
    contentBangtin.classList.add("d-none");
  });
</script>

<script>
    const pathParts = window.location.pathname.split('/');
    const CLASS_ID = pathParts[pathParts.length - 1];

    async function renderAnnounce(){
        try {
            const res = await fetch(`/class-student/api/${CLASS_ID}`)
            const classInfo = await res.json()

            // change content Bang tin
            let listAnnouncements = classInfo.announcement
            listAnnouncements = (classInfo.announcement || []).sort((a, b) => {
                return new Date(b.date) - new Date(a.date);
            });
            contentBangtin.innerHTML = listAnnouncements
            .map(a => `
                <div class="card p-3 mb-3">
                <span class="text-muted">
                    ${new Date(a.date).toLocaleDateString('vi-VN')}
                </span>
                <p class="mb-0">${a.content}</p>
                </div>
            `)
            .join('');
            
        } catch(error) {
            console.error('error fetch class info')
        }
    }


    async function renderTestInfo(){
        try {
            const res = await fetch(`/class-student/api/get-class-test?class_id=${CLASS_ID}`)
            const essayInfoStatus = await res.json()
            const { student_id, tests} = essayInfoStatus

            contentBaitap.innerHTML = tests
            .map(test => `
                <div class="card mt-3 p-3">
                    <strong><a href="/test-student/test-information/${test.test_id}?class_id=${CLASS_ID}">${test.test_title}</a></strong>
                    <p>Trạng Thái: ${test.test_status_submit?'Đã nộp ✅' : 'Chưa Nộp ❌'}</p>
                    <p>${test.test_status_submit ? 'Điểm Số : ' + test.score + ' / ' + test.sum_score : ''}</p>
                </div>
            `)
            .join('');
            
        } catch(error) {
            console.error('error fetch class info')
        }
    }

    async function renderVideoInfo(){
        try {
            const res = await fetch(`/class-student/student-video?class_id=${CLASS_ID}`)
            const videoStudentInfoStatus = await res.json()
            const { videoClassInfo, studentVideoInfo, student_id } = videoStudentInfoStatus

            // this part merge information
            let videoStatus = [] ;
            for (let i = 0; i < videoClassInfo.length; i++) {
              const videoRequirement = videoClassInfo[i];
              let haveFound = false;
              for (let j = 0; j < studentVideoInfo.video.length; j++) {
                const video = studentVideoInfo.video[j];
                if ( videoRequirement._id === video.video_requirement_id ) {
                  videoStatus.push({
                    video_requirement_id: videoRequirement._id,
                    video_requirement_name:videoRequirement.video_requirement_name,
                    video_embed: videoRequirement.videoRequirement,
                    video_duration: videoRequirement.video_duration,
                    note: videoRequirement.note,
                    completedStatus: true
                  })
                  haveFound = true
                }
              }

              if ( !haveFound ) {
                videoStatus.push({
                  video_requirement_id: videoRequirement._id,
                  video_requirement_name:videoRequirement.video_requirement_name,
                  video_embed: videoRequirement.videoRequirement,
                  video_duration: videoRequirement.video_duration,
                  note: videoRequirement.note,
                  completedStatus: false
                })
              }
            }

            contentVideo.innerHTML = videoStatus
            .map(video_Status => `
                <div class="card mt-3 p-3">
                    <strong><a href="/video-student/watch-video/${video_Status.video_requirement_id}?student_id=${student_id}">${video_Status.video_requirement_name}</a></strong>
                    <p>Thời gian xem: ${video_Status.video_duration}</p>
                    <p>Ghi chú: ${video_Status.note} phút</p>
                    <p>Trạng Thái: ${ video_Status.completedStatus ? ' Đã hoàn thành ✅' : ' Chưa hoàn thành ❌' }</p>
                </div>
            `)
            .join('');
            
        } catch(error) {
            console.error('error fetch class info')
        }
    }

    async function renderEssayInfo() {
      try {
        const res = await fetch(`/class-student/student-essay?class_id=${CLASS_ID}`)
        const { essayClassInfo, studentEssayInfo, student_id } = await res.json();

        const essaySubmissions = studentEssayInfo.essay || [];
        const essayStatus = essayClassInfo.map((essay) => {
          // Tìm bài nộp tương ứng của học sinh (nếu có)
          const submission = essaySubmissions.find(sub => sub.essay_id === essay._id);

          return {
            essay_id: essay._id,
            title: essay.title,
            subject: essay.subject,
            grade: essay.grade,
            url_file: essay.url_file,
            submit_status: !!submission,
            submission_file: submission?.url_file_submit ?? null,
            submitted_at: submission?.createdAt ?? null
          };
        });

        // Hiển thị
        contentEssay.innerHTML = essayStatus.map(status => `
          <div class="card mt-3 p-3">
            <a href="/essay-student/essay-information/${status.essay_id}?class_id=${CLASS_ID}"><strong>Đề thi: ${status.title}</strong></a>
            <p>Môn: ${status.subject} - Khối: ${status.grade}</p>
            <p>File đề: <a href="${status.url_file}" target="_blank">Xem PDF</a></p>
            <p>Trạng thái: ${status.submit_status ? 'Đã nộp ✅' : 'Chưa nộp ❌'}</p>
            ${status.submit_status ? `
              <p>File bài làm: <a href="${status.submission_file}" target="_blank">Xem bài nộp</a></p>
              <p>Thời gian nộp: ${new Date(status.submitted_at).toLocaleString('vi-VN')}</p>
            ` : ''}
          </div>
        `).join('');

      } catch (err) {
        console.error(err);
        contentEssay.innerHTML = `<div class="alert alert-danger">Lỗi tải dữ liệu bài essay</div>`;
      }
    }


    document.addEventListener('DOMContentLoaded', ()=>{
        renderAnnounce()
        renderTestInfo()
        renderVideoInfo()
        renderEssayInfo()
    })
</script>

<a href="https://m.me/61575332265438" target="_blank" >
  <i style="
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: #0084ff;
  color: white;
  padding: 15px;
  border-radius: 50%;
  font-size: 20px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.2);
  z-index: 9999;
  text-decoration: none;" class="fa-brands fa-facebook-messenger"></i>
</a>
