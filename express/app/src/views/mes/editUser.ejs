<link rel="stylesheet" href="/public/css/editUserProfile.css" />

<div class="container mt-5">
  <h2 class="text-center mb-5 fw-bold text-primary">Edit Profile</h2>

  <!-- Thông tin user -->
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card shadow-sm border-0">
        <form id="profileForm">
          <div class="card-body text-center">
            <!-- Thông tin cá nhân -->
            <div class="mb-3">
              <label for="fullnameInput" class="form-label fw-bold">Full Name</label>
              <input
                id="fullnameInput"
                name="fullname"
                type="text"
                class="form-control shadow-on-focus"
                readonly
              />
            </div>
            <div class="mb-3">
              <label for="usernameInput" class="form-label fw-bold">Username</label>
              <input
                id="usernameInput"
                name=""
                type="text"
                class="form-control shadow-on-focus"
                readonly
              />
            </div>
            <div class="mb-4">
              <label for="emailInput" class="form-label fw-bold">Email</label>
              <input
                id="emailInput"
                name=""
                type="email"
                class="form-control shadow-on-focus"
                readonly
              />
            </div>

            <!-- Nút điều chỉnh -->
            <div class="d-flex justify-content-center gap-2">
              <button id="editBtn" type="button" class="btn btn-primary">
                <i class="bi bi-pencil-fill me-1"></i> Edit
              </button>
              <button id="saveBtn" type="submit" class="btn btn-success" style="display: none">
                <i class="bi bi-floppy-fill me-1"></i> Save
              </button>
              <button id="cancelBtn" type="button" class="btn btn-secondary" style="display: none">
                <i class="bi bi-x-circle-fill me-1"></i> Cancel
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  let originalData = {}; // Lưu dữ liệu ban đầu để khôi phục khi cancel
  let isEditing = false;

  // Lấy các phần tử giao diện
  const profileForm = document.getElementById('profileForm');
  const fullnameInput = document.getElementById('fullnameInput');
  const usernameInput = document.getElementById('usernameInput');
  const emailInput = document.getElementById('emailInput');
  const editBtn = document.getElementById('editBtn');
  const saveBtn = document.getElementById('saveBtn');
  const cancelBtn = document.getElementById('cancelBtn');

  // Hàm fetch thông tin user
  async function fetchUser(userId) {
    try {
      const response = await fetch(`/me/api/get-user-info`);
      const data = await response.json();
      return data.userInfo;
    } catch (error) {
      console.error('Error fetching user:', error);
      alert('Failed to load user data.');
      return null;
    }
  }

  // Hàm hiển thị thông tin user
  function displayUser(user) {
    fullnameInput.value = user.fullname;
    usernameInput.value = user.username;
    emailInput.value = user.email;
    originalData = { ...user }; // Lưu dữ liệu ban đầu
  }

  // Hàm chuyển sang trạng thái chỉnh sửa
  function enableEditing() {
    isEditing = true;
    fullnameInput.removeAttribute('readonly');
    // usernameInput.removeAttribute('readonly');
    // emailInput.removeAttribute('readonly');
    editBtn.style.display = 'none';
    saveBtn.style.display = 'inline-block';
    cancelBtn.style.display = 'inline-block';
  }

  // Hàm hủy chỉnh sửa
  function cancelEditing() {
    isEditing = false;
    fullnameInput.setAttribute('readonly', true);
    usernameInput.setAttribute('readonly', true);
    emailInput.setAttribute('readonly', true);
    editBtn.style.display = 'inline-block';
    saveBtn.style.display = 'none';
    cancelBtn.style.display = 'none';
    displayUser(originalData); // Khôi phục dữ liệu ban đầu
  }

  // Xử lý sự kiện
  editBtn.addEventListener('click', () => {
    enableEditing();
  });

  cancelBtn.addEventListener('click', () => {
    cancelEditing();
  });

  saveBtn.addEventListener('click', async (event) => {
    event.preventDefault();
    if (isEditing) {
      const updatedData = {
        fullname: fullnameInput.value,
      };

      try {
        const user = await takeUser();
        const response = await fetch(`/me/api/${user._id}/edit`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(updatedData),
        });

        if (response.ok) {
          const result = await response.json();
          alert('Chỉnh sửa Thành công!');
          displayUser(result.updatedUser || updatedData);
          cancelEditing();
          window.location.reload();
        } else {
          throw new Error('Chỉnh sửa Thất bại');
        }
      } catch (error) {
        console.error('Error updating profile:', error);
        alert('Failed to update profile.');
      }
    }
  });

  // Hàm khởi tạo trang
  async function init() {
    const user = await takeUser();
    if (user) {
      displayUser(user);
    }
  }

  async function takeUser() {
    const pathParts = window.location.pathname.split('/');
    // ['','me','680f1e0064457c69ff1f2c8e','edit']
    const userId = pathParts[2];

    const user = await fetchUser(userId);
    return user;
  }

  // Gọi hàm init khi trang được tải
  document.addEventListener('DOMContentLoaded', init);
</script>
