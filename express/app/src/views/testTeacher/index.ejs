  <style>
    .btn-custom { min-width: 180px; }
    .doc-card {
      border: 1px solid #eee;
      border-radius: 8px;
      padding: 1rem;
      background-color: #fff;
      height: 100%;
    }
    .tag-badge {
      background-color: #0d6efd;
      color: white;
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
      border-radius: 0.5rem;
    }
  </style>
<div class="container mt-4">

  <!-- T√¨m ki·∫øm + n√∫t t·∫°o -->
  <div class="d-flex flex-wrap gap-2 justify-content-between align-items-center mb-4">
    <input type="text" class="form-control w-auto" placeholder="T√¨m ki·∫øm" style="max-width: 300px;" hidden>

    <div class="d-flex flex-wrap gap-2">
      <button class="btn btn-success btn-custom"><a href="/test-teacher/upload-files-test">+ T·∫°o ƒë·ªÅ thi</a></button>
      <button class="btn btn-purple text-white btn-custom" style="background-color: #6f42c1;">üìÅ T·∫°o th∆∞ m·ª•c</button>
    </div>
  </div>

  <!-- Danh s√°ch t·∫•t c·∫£ -->
  <h5 class="mb-3">T·∫•t c·∫£</h5>
  <div class="table-responsive">
    <table class="table table-hover align-middle">
      <thead class="table-light">
        <tr>
          <th>T√™n</th>
          <th>Th·ªùi gian l√†m b√†i</th>
          <th>ƒê√£ Giao Cho</th>
          <th>S·ª≠a l·∫ßn cu·ªëi</th>
        </tr>
      </thead>
      <tbody class="test-teacher-list">
      </tbody>
    </table>
  </div>
</div>

<script>
  async function fetchTests() {
    try {
      const response = await fetch('/test-teacher/api/get-tests/');
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const tests = await response.json();
      console.log(tests);
      const listItems = document.querySelector('.test-teacher-list');
      listItems.innerHTML = ''; // Clear existing items
      tests.forEach(test => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td><a href="/test-teacher/test-detail?test-id=${test._id}">${test.title || 'no data'}</a></td>
          <td>${test.test_time +' ph√∫t' || 'no data'}</td>
          <td>${(test.class && test.class.length > 0)
            ? test.class.map(classItem => classItem.class_name).join(', ')
            : 'ch∆∞a giao'}</td>
          <td>${new Date(test.updatedAt).toLocaleString() || 'no data'}</td>
        `;
        listItems.appendChild(row);
      });


    } catch (error) {
      console.error('Error fetching tests:', error);
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    fetchTests()


  });
</script>