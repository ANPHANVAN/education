  <style>
    .status-pill {padding: .25rem .6rem; border-radius: 50px;}
  </style>

<div class="container my-4">

    <!-- ==== THÔNG TIN VIDEO & LỚP ==== -->
  <h2 class="mb-4">Danh sách nộp bài</h2>

  <div id="infoCard" class="card mb-4 d-none">
    <div class="card-body row gy-2">
      <div class="col-md-6">
        <h5 class="card-title mb-1"><span id="videoName"></span></h5>
        <p class="mb-0 small text-muted">
          Môn <span id="TestSubject"></span> • Khối <span id="TestGrade"></span><br>
          Thời lượng: <strong id="TestDuration"></strong><br>
          Tạo ngày: <span id="TestCreated"></span>
        </p>
      </div>
      <div class="col-md-6">
        <h5 class="card-title mb-1">Thông tin lớp</h5>
        <p class="mb-0 small text-muted">
          Tên lớp: <strong id="className"></strong><br>
          Năm học: <span id="classYear"></span><br>
          Khối: <span id="classGrade"></span> • Sĩ số: <span id="classSize"></span>
        </p>
      </div>
    </div>
  </div>

  <!-- spinner -->
  <div id="loading" class="text-center my-5">
    <div class="spinner-border text-primary" role="status"></div>
  </div>

  <!-- bảng kết quả -->
  <div class="table-responsive">
    <table id="resultTable" class="table table-striped align-middle d-none">
      <thead class="table-primary">
        <tr>
          <th>#</th>
          <th>Họ&nbsp;tên&nbsp;/&nbsp;Email</th>
          <th>Trạng&nbsp;thái</th>
          <th>Điểm</th>
          <th>Thời&nbsp;gian&nbsp;nộp</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <!-- khi không có dữ liệu -->
  <p id="emptyMsg" class="text-muted text-center d-none">
    Chưa có thông tin học sinh.
  </p>
</div>

<script>
  
  document.addEventListener('DOMContentLoaded', () => {
    /* === Lấy classId & testId từ URL === */
    const urlParams = new URLSearchParams(window.location.search);
    const CLASS_ID = urlParams.get('class_id');
    const TEST_ID  = urlParams.get('test-id');
    if (!CLASS_ID || !TEST_ID) {
      alert('Thiếu class_id hoặc test-id trên URL');
      return;
    }

    const API = `/test-teacher/api/test-class-detail?class_id=${CLASS_ID}&test-id=${TEST_ID}`;

    loadData(API);
  });

  /* ---- Hàm tải & render ---- */
  async function loadData(apiUrl) {
    const spinner   = document.getElementById('loading');
    const table     = document.getElementById('resultTable');
    const tbody     = table.querySelector('tbody');
    const emptyMsg  = document.getElementById('emptyMsg');

    try {
      const res = await fetch(apiUrl);
      if (!res.ok) throw new Error('Fetch failed');
      const { submissionInfo = [], classInfo = {} ,testInfo={}} = await res.json();
      const students = classInfo.students || [];

    /* ----- HIỂN THỊ THÔNG TIN TEST + CLASS ----- */
    document.getElementById('videoName').textContent     = testInfo.title;
    document.getElementById('TestSubject').textContent  = testInfo.subject;
    document.getElementById('TestGrade').textContent    = testInfo.grade;
    document.getElementById('TestDuration').textContent = testInfo.test_time + ' phút';
    document.getElementById('TestCreated').textContent  =
      new Date(testInfo.createdAt).toLocaleString('vi-VN');

    document.getElementById('className').textContent = classInfo.class_name;
    document.getElementById('classYear').textContent = classInfo.school_year;
    document.getElementById('classGrade').textContent= classInfo.grade;
    document.getElementById('classSize').textContent = classInfo.number_student;
    infoCard.classList.remove('d-none');


      /* ---- Ghép hai mảng ---- */
      const merged = students.map(st => {
        // tìm tất cả bài nộp của học sinh này
        const subs = submissionInfo.filter(
          s => s.student_id === st.student_id
        );
        if (!subs.length) return { ...st, submit_status: false };

        // lấy bài nộp mới nhất (time_end lớn nhất)
        subs.sort((a, b) => new Date(b.time_end) - new Date(a.time_end));
        return {
          ...st,
          submit_status: true,
          submission: subs[0]
        };
      });

      /* ---- Hiển thị ---- */
      spinner.classList.add('d-none');

      if (!merged.length) {
        emptyMsg.classList.remove('d-none');
        return;
      }

      table.classList.remove('d-none');

      merged.forEach((st, idx) => {
        const u = st.student_user_id;
        const tr = document.createElement('tr');

        // trạng thái + điểm
        const statusHtml = st.submit_status
          ? `<span class="status-pill bg-success text-white">Đã nộp</span>`
          : `<span class="status-pill bg-secondary text-white">Chưa nộp</span>`;

        const score = st.submit_status ? st.submission.score : '-';
        const time  = st.submit_status
          ? new Date(st.submission.time_end).toLocaleString('vi-VN')
          : '-';

        tr.innerHTML = `
          <td>${idx + 1}</td>
          <td>
            ${u.fullname}<br>
            <small class="text-muted">${u.email}</small>
          </td>
          <td>${statusHtml}</td>
          <td>${score}</td>
          <td>${time}</td>
        `;
        tbody.appendChild(tr);
      });
    } catch (err) {
      console.error(err);
      spinner.classList.add('d-none');
      emptyMsg.textContent = 'Không thể tải dữ liệu. Vui lòng thử lại.';
      emptyMsg.classList.remove('d-none');
    }
  }
</script>