events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;

  upstream express {
    server express:3000;
  }

  server {
    listen 80;
    server_name hdp.io.vn www.hdp.io.vn;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri $uri/ =404;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name hdp.io.vn www.hdp.io.vn;

    ssl_certificate /etc/letsencrypt/live/hdp.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hdp.io.vn/privkey.pem;

    client_max_body_size 50M;

    location / {
      proxy_pass http://express;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      add_header Last-Modified $date_gmt;
      add_header Pragma "no-cache";
      expires off;
      etag off;
    }

    location /uploads/ {
      alias /uploads/;
      try_files $uri $uri/ =404;
      include mime.types;
      default_type application/octet-stream;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      add_header Pragma "no-cache";
      expires off;
      etag off;
    }

    location /public/ {
      alias /public/;
      include mime.types;
      default_type application/octet-stream;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      add_header Pragma "no-cache";
      expires off;
      etag off;
    }
  }
}
